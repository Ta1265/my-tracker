user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
  # multi_accept on;
}

http {
  sendfile on;
  tcp_nopush on;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  # Logging Settings
  access_log /var/log/nginx/access.log;
  gzip on;
  include /etc/nginx/conf.d/*.conf;

  server {
    listen 80;
    server_name tubesock.xyz www.tubesock.xyz;
    return 301 https://www.tubesock.xyz;
  }

  server {
    listen 443 ssl http2;
    server_name tubesock.xyz;

    # SSL certificates generated by Let's Encrypt certbot
    ssl_certificate /etc/letsencrypt/live/tubesock.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tubesock.xyz/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/tubesock.xyz/chain.pem;

    # SSL configuration 
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    
    # Enable HSTS
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Enable only secure protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 30s;

    # Add security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;

    # Proxy to app running on port 3000
    location / {
      proxy_set_header  X-Forwarded-For $remote_addr;
      proxy_set_header  Host $http_host;
      proxy_pass        "http://127.0.0.1:3000";
    }
  }

}